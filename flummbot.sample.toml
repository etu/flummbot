# This block can be repeated as many times as you wish.
#
# For sanity, please keep the name of your connection unique, this is
# needed for the keeping track of connections.
[[Connections]]
Name = "freenode"
Server = "irc.freenode.net"
Port = 6697
Channels = [ "#botwar" ]
User = "flummbot"
Nick = "flummbot"
UseTLS = true
NickservIdentify = "IDENTIFY MyNickservPassword"


# Settings to connect to a database for storage of backlogs and some
# other potentially stateful data that needs to be stored.
#
# Some examples of how to connect here:
# http://gorm.io/docs/connecting_to_the_database.html
#
# Currently we only support sqlite3, but postgresql is planned.
[Database]
Dialect = "sqlite3"
Args = "flummbot.db"

# Correction module to allow users doing "s/foo/bar" style string replacement of previous messages
[Modules.Corrections]
Enable = true
Separators = [ "/", "#", "$", ".", ",", "ü•í", "üçÜ", "ü•ï", "üçë", "ü•¶", "üçå" ]
Message = "What %s meant to write was: %s" # Has to contain two %s for printf
UserLogSize = 3

# Extras module with some small extra random things
[Modules.Extras]
Enable = true
CountdownCommand = "!countdown"
CountdownMessageN = "Countdown: %s" # Has to contain one %s for the printf
CountdownMessage0 = "Countdown: %s!!11!oneone! %s is happening!" # Has to contain two %s for the printf

# Enable the karma module
[Modules.Karma]
Enable = true
PlusOperator = "++"
MinusOperator = "--"
Command = "!karma"
ChangeMessage = "%s karma changed to %s" # Has to contain two %s for the printf
ReportMessage = "%s got the current karma %s!" # Has to contain two %s for the printf

# Set static values for specific keywords, this makes the module
# ignore karma changes for these values but still report the value it
# has configured here when asked for it.
[Modules.Karma.StaticValues]
foobar = 3

# Enable the quotes module to store quotes
[Modules.Quotes]
Enable = true
Command = "!quote"
AddMessage = "Quote added, use %s without params to get a random quote" # Has to contain one %s for the printf
PrintMessage = "Quote added by %s @ %s: %s" # Has to contain three %s for the printf

# Enable Tells module to relay messages
[Modules.Tells]
Enable = true
Command = "!tell"
AddMessage = "Alright, I'm going to tell %s: %s" # Has to contain two %s for the printf
PrintMessage = "%s: '%s' -- %s @ %s" # Has to contain four %s for the printf
